/*
 * Xero Payroll AU
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.payrollau;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * PayslipReimbursementLine
 */

public class PayslipReimbursementLine {
  
  @JsonProperty("ReimbursementTypeID")
  private UUID reimbursementTypeID;

  
  @JsonProperty("Description")
  private String description;

  
  @JsonProperty("ExpenseAccount")
  private String expenseAccount;

  
  @JsonProperty("Amount")
  private Float amount;

  public PayslipReimbursementLine reimbursementTypeID(UUID reimbursementTypeID) {
    this.reimbursementTypeID = reimbursementTypeID;
    return this;
  }

   /**
   * Xero identifier for payroll reimbursement type.
   * @return reimbursementTypeID
  **/
  @ApiModelProperty(example = "e0eb6747-7c17-4075-b804-989f8d4e5d39", value = "Xero identifier for payroll reimbursement type.")
  public UUID getReimbursementTypeID() {
    return reimbursementTypeID;
  }

  public void setReimbursementTypeID(UUID reimbursementTypeID) {
    this.reimbursementTypeID = reimbursementTypeID;
  }

  public PayslipReimbursementLine description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Reimbursement lines description (max length 50)
   * @return description
  **/
  @ApiModelProperty(example = "For the taxi", value = "Reimbursement lines description (max length 50)")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PayslipReimbursementLine expenseAccount(String expenseAccount) {
    this.expenseAccount = expenseAccount;
    return this;
  }

   /**
   * Reimbursement expense account. For posted pay run you should be able to see expense account code.
   * @return expenseAccount
  **/
  @ApiModelProperty(example = "420", value = "Reimbursement expense account. For posted pay run you should be able to see expense account code.")
  public String getExpenseAccount() {
    return expenseAccount;
  }

  public void setExpenseAccount(String expenseAccount) {
    this.expenseAccount = expenseAccount;
  }

  public PayslipReimbursementLine amount(Float amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Reimbursement amount
   * @return amount
  **/
  @ApiModelProperty(example = "10.5", value = "Reimbursement amount")
  public Float getAmount() {
    return amount;
  }

  public void setAmount(Float amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayslipReimbursementLine payslipReimbursementLine = (PayslipReimbursementLine) o;
    return Objects.equals(this.reimbursementTypeID, payslipReimbursementLine.reimbursementTypeID) &&
        Objects.equals(this.description, payslipReimbursementLine.description) &&
        Objects.equals(this.expenseAccount, payslipReimbursementLine.expenseAccount) &&
        Objects.equals(this.amount, payslipReimbursementLine.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reimbursementTypeID, description, expenseAccount, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayslipReimbursementLine {\n");
    sb.append("    reimbursementTypeID: ").append(toIndentedString(reimbursementTypeID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expenseAccount: ").append(toIndentedString(expenseAccount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

